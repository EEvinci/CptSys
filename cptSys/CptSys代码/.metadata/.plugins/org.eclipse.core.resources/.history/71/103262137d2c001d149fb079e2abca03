package cn.zucc.edu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import cn.zucc.edu.models.BeanCptInfo;
import cn.zucc.edu.models.BeanCptItemInfo;
import cn.zucc.edu.util.BaseException;
import cn.zucc.edu.util.DbException;
import cn.zucc.edu.util.StringUtil;

/**
 * 赛项信息管理
 * @author PC
 *
 */
public class CptItemDao {

/**
 * 赛项添加
 * @param conn
 * @param cptItemInfo
 * @return
 * @throws Excetions
 */
	public int add(Connection conn, BeanCptItemInfo cptItemInfo) throws BaseException{
		
		int rs = 0;
		String sql = "insert into cpt_itm_info values(?,?,?,?,?)";
		
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, cptItemInfo.getCptItemId());
			pstmt.setString(2, cptItemInfo.getCptItemName());
			pstmt.setString(3, cptItemInfo.getResPerson());
			pstmt.setString(4, cptItemInfo.getBelongCol());
			pstmt.setString(5, cptItemInfo.getCptLevel());
			
			rs = pstmt.executeUpdate();
			return rs;
		}catch(SQLException e) {
			e.printStackTrace();
			throw new DbException(e);
		}finally {
			try {
				conn.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
	/**
	 * 查询赛项信息
	 * @param conn
	 * @param cptItemInfo
	 * @return
	 * @throws BaseException
	 */
	public ResultSet query(Connection conn,BeanCptItemInfo cptItemInfo)throws BaseException{

		ResultSet rs = null;
		StringBuffer sb = new StringBuffer("select * from cpt_itm_info");
		
		try {
			if(StringUtil.isNotEmpty(cptItemInfo.getCptItemId())){
				sb.append(" and CptItemId = " + cptItemInfo.getCptItemId());
			}
			PreparedStatement pstmt = conn.prepareStatement(sb.toString().replaceFirst("and", "where"));
			rs = pstmt.executeQuery();
			return rs;
		}catch(SQLException e){
			e.printStackTrace();
			throw new DbException(e);
		}
	}
	
	
	/**
	 * 修改赛项信息
	 * @param conn
	 * @param cptInfo
	 * @return
	 * @throws BaseException
	 */
	public int update(Connection conn, BeanCptItemInfo cptItemInfo) throws BaseException{
		int rs = 0;
		String sql = "update cpt_itm_info set CptItemName=?, ResPerson=?, BelongCol=?, CptLevel=? where CptItemId=?";
		
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, cptItemInfo.getCptItemName());
			pstmt.setString(2, cptItemInfo.getResPerson());
			pstmt.setString(3, cptItemInfo.getBelongCol());
			pstmt.setString(4, cptItemInfo.getCptLevel());
			pstmt.setString(5, cptItemInfo.getCptItemId());
			
			rs = pstmt.executeUpdate();
			return rs;
		}catch(SQLException e) {
			e.printStackTrace();
			throw new DbException(e);
		}finally {
			try {
				conn.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
	
	/**
	 * 删除赛项信息
	 * @param conn
	 * @param cptInfo
	 * @return
	 * @throws BaseException
	 */
	public int delete(Connection conn, String id) throws BaseException{
		int rs = 0;
		String sql = "delete from cpt_itm_info where CptItemId = ?";
		
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1,id);
			rs = pstmt.executeUpdate();
			return rs;
		}catch(SQLException e) {
			e.printStackTrace();
			throw new DbException(e);
		}finally {
			try {
				conn.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
}
